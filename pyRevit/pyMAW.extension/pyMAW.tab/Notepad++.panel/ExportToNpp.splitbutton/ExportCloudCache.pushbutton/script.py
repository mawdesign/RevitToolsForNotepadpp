from pyrevit import revit
from pyrevit import script
from pyrevit import HOST_APP
from rpws import RevitServer
from datetime import datetime
import os, codecs
import re
import Notepadpp as npp


cfg = script.get_config("Notepad++")
cc_export_format = cfg.get_option("cc_export_format", "List")


def num_to_char(match):
    string = match.group()
    return chr(int(string[1:], 16))


def unquote(string):
    return re.sub(r"%[0-9]+", num_to_char, string)


def get_cloudcachefiles():
    file_path = revit.get_current_journal_file()
    guid_pattern = r"< ModelPath.*CLD:\\\\.*{(.*)}(.*)\\{(.*)}(.*)\.rvt\""  # Matches .rvt model files
    link_pattern = (
        r"CollaborationCache\\(.*?)\\(.*)\.rvt\""  # Matches account id and path
    )

    strings = []
    links = []
    accountid = ""
    with open(file_path, "r") as file:
        for line in file:
            match = re.search(link_pattern, line)
            if match:
                if not accountid:
                    accountid = match.group(1)
                path = match.group(2).split("\\")
                if len(path) > 2 and path[1] == "LinkedModels":
                    links.append(path[2])
            matches = re.finditer(guid_pattern, line)
            for matchNum, match in enumerate(matches, start=1):
                strings.append(match.groups())
    projects = {}
    for s in strings:
        if len(s) < 4:
            continue
        if (
            s[0] == "00000000-0000-0000-0000-000000000000"
            or s[2] == "00000000-0000-0000-0000-000000000000"
        ):  # skip when zero guid
            continue
        pg = s[0]
        pn = unquote(s[1])
        fg = s[2]
        fn = s[3]
        fl = projects.get(pg) if projects.get(pg) else dict(project=pn)
        fl[fg] = [fn, fg in links]
        projects[pg] = fl
    return projects, accountid


revit_ver_no = HOST_APP.version
# revit_user = HOST_APP.username
cc_destpath = cfg.get_option("cc_destpath", "%docsdir%\\CloudCacheExport")
username = os.getenv("username")
revitver = "Autodesk Revit " + revit_ver_no
text = ""


# Get cloud cache files
projects, accountid = get_cloudcachefiles()

if cc_export_format == "Batch":
    preable_text = """@echo off
setlocal
REM  Collaboration Cache batch script generated by pyMAW
REM Save with .bat or .cmd extension

FOR /F "tokens=2*" %%G IN ('REG QUERY "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders" /v "Personal"') DO (SET docsdir=%%H)

SET username={os_user}
SET revitver={revit_ver}
SET cachepath=C:\\Users\\%username%\\AppData\\Local\\Autodesk\\Revit\\%revitver%\\CollaborationCache\\{accountid}
SET destpath={dest_path}

REM  Script to copy from cache to %destpath% and restore filename

"""
    project_text = """

REM  {proj_guid} {{{proj_name}}}
"""
    model_text = """
XCOPY "%cachepath%\\{proj_guid}\\{link_folder}{file_guid}.rvt" "%destpath%\\{link_folder}{file_name}.rvt
"""
    syntax = "-lbatch"
elif cc_export_format == "csv":
    preable_text = "Version,Project GUID,Project,Subdirectory,File GUID,Filename,User,Account Id\r\n"
    project_text = ""
    model_text = '{revit_ver_no},{proj_guid},"{proj_name}","{link_folder}",{file_guid},"{file_name}","{os_user}",{accountid}\r\n'
    syntax = "-lnormal"
else:
    preable_text = "C:\\Users\\{os_user}\\AppData\\Local\\Autodesk\\Revit\\{revit_ver}\\CollaborationCache\\{accountid}\r\n"
    project_text = "\r\n{proj_guid} {{{proj_name}}}\r\n"
    model_text = "\t{file_guid} {{{file_name}.rvt}}\r\n"
    syntax = "-lnormal"
text += preable_text.format(
    os_user=username,
    accountid=accountid,
    revit_ver=revitver,
    dest_path=cc_destpath,
)

for pg, pn in projects.items():
    text += project_text.format(
        os_user=username,
        accountid=accountid,
        revit_ver=revitver,
        proj_guid=pg,
        proj_name=pn["project"],
    )
    for fg, fn in pn.items():
        text += (
            model_text.format(
                os_user=username,
                accountid=accountid,
                revit_ver=revitver,
                proj_guid=pg,
                proj_name=pn["project"],
                file_guid=fg,
                file_name=fn[0],
                link_folder="LinkedModels\\" if fn[1] else "",
            )
            if fg != "project"
            else ""
        )
if text != "":
    docname = "CloudCacheExport_{}_{}".format(cc_export_format, revit_ver_no)
    path = script.get_instance_data_file(docname)
    if path:
        tempfile = revit.files.write_text(path, text)
        revit.files.correct_text_encoding(path)

        # open file

        npp.OpenNpp(path=path, options=syntax)
# print(text)
